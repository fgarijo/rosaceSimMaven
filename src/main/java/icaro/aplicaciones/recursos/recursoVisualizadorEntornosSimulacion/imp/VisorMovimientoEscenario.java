/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * 
 *
 * F Garijo
 */
package icaro.aplicaciones.recursos.recursoVisualizadorEntornosSimulacion.imp;

import icaro.aplicaciones.InfoSimulador.informacion.RobotStatus1;
import icaro.aplicaciones.InfoSimulador.informacion.Victim;
import icaro.aplicaciones.InfoSimulador.informacion.VocabularioRosace;
import java.awt.Image;
import java.awt.Point;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import org.openide.util.Utilities;

/**
 *
 * @author FGarijo
 */
public class VisorMovimientoEscenario extends javax.swing.JFrame {

    /** Creates new form ControlCenterGui2 */
    private NotificadorInfoUsuarioSimulador notifEvts;
    private ArrayList identsRobotsEquipo ;
    private javax.swing.JLabel jLabelAux;
    private String directorioTrabajo;
     private String tituloVentanaVisor = "ROSACE Scenario Visor";
    private String rutassrc = "src/";   //poner "src/main/java" si el proyecto de icaro se monta en un proyecto maven
    private String rutapaqueteConstructorEscenariosROSACE = "utilsDiseniaEscenariosRosace/";
    public static  ImageIcon IMAGErobot,IMAGEmujer,IMAGEmujerRes ,IMAGEmujerAsignada,IMAGEmujerReasignada,IMAGErobotAveriado;
    private String rutaIconos = "\\src\\utilsDiseniaEscenariosRosace\\";
//    private String rutaPersistenciaEscenario = "\\src\\persistenciaEscenarios\\";
    private String directorioPersistencia = VocabularioRosace.NombreDirectorioPersistenciaEscenarios+File.separator;
    private String imageniconoHombre = "Hombre.png";
    private String imageniconoMujer = "Mujer.png";
    private String imageniconoMujerRescatada = "MujerRescatada.png";
    private String imageniconoMujerReasignada = "MujerReasignada.png";
    private String imageniconoMujerAsignada= "MujerAsignada.png";
    private String imageniconoHombreRescatado = "HombreRescatado.png";
    private String imageniconoRobot = "Robot.png";
    private String imageniconoRobotAveriado = "RobotAveriado.png";
    private String modeloOrganizativoInicial = "Igualitario";
    private Map<String, JLabel> tablaEntidadesEnEscenario;
    private ArrayList <JLabel> listaEntidadesEnEscenario;
    private JPanel panelVisor;
    private String modeloOrganizativo;
    private String identEquipoActual;
    private  int mumeroVictimas=0;
    private  int numeroRobots=0;
    private  EscenarioSimulacionRobtsVictms escenarioActual;
    private boolean escenarioActualAbierto =false;

     public  VisorMovimientoEscenario(EscenarioSimulacionRobtsVictms infoEscenario) throws Exception {
 
        initComponents();
        initEscenario();
        escenarioActual = infoEscenario;
//        directorioTrabajo = System.getProperty("user.dir");
        numeroRobots=0;  mumeroVictimas=0;
//        tablaEntidadesEnEscenario = new HashMap<String, JLabel>();
        listaEntidadesEnEscenario = new ArrayList < JLabel>();
    }
   
    private void initEscenario(){
//        String rutaIconoRobot =   rutapaqueteConstructorEscenariosROSACE + imageniconoRobot;
        IMAGErobot =new ImageIcon(VocabularioRosace.RUTA_ICONOS_ESCENARIOS+imageniconoRobot);
        IMAGErobotAveriado =new ImageIcon(VocabularioRosace.RUTA_ICONOS_ESCENARIOS+imageniconoRobotAveriado);
        IMAGEmujerRes = new ImageIcon(VocabularioRosace.RUTA_ICONOS_ESCENARIOS+imageniconoMujerRescatada);
        IMAGEmujer = new ImageIcon(VocabularioRosace.RUTA_ICONOS_ESCENARIOS+imageniconoMujer);
        IMAGEmujerReasignada= new ImageIcon(VocabularioRosace.RUTA_ICONOS_ESCENARIOS+imageniconoMujerReasignada);
        IMAGEmujerAsignada= new ImageIcon(VocabularioRosace.RUTA_ICONOS_ESCENARIOS+imageniconoMujerAsignada);
//        IMAGEmujerReAsignada= Utilities.loadImage ("utilsDiseniaEscenariosRosace/MujerReasignada.png");
        
        tablaEntidadesEnEscenario= new HashMap<>();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogAvisoErrorDefNumEntidades = new javax.swing.JDialog();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jOptionPane1 = new javax.swing.JOptionPane();
        jTextFieldModeloOrganizacion = new javax.swing.JTextField();
        robotIcon = new javax.swing.JLabel();
        intervalNumRobots = new javax.swing.JTextField();
        victimaIcon1 = new javax.swing.JLabel();
        intervalNumVictimas = new javax.swing.JTextField();
        jTextFieldIdentEquipo = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        jLabelOrganizacion = new javax.swing.JLabel();
        jLabelIdentEquipo = new javax.swing.JLabel();
        GestionEscenarios = new javax.swing.JMenuBar();

        jDialogAvisoErrorDefNumEntidades.setTitle("Error: Definición de entidades en el escenario");
        jDialogAvisoErrorDefNumEntidades.setBounds(new java.awt.Rectangle(20, 20, 335, 88));
        jDialogAvisoErrorDefNumEntidades.setType(java.awt.Window.Type.POPUP);

        jButton1.setText("Aceptar");

        jLabel1.setText("El numero de entidades no puede ser mayor que 20");

        javax.swing.GroupLayout jDialogAvisoErrorDefNumEntidadesLayout = new javax.swing.GroupLayout(jDialogAvisoErrorDefNumEntidades.getContentPane());
        jDialogAvisoErrorDefNumEntidades.getContentPane().setLayout(jDialogAvisoErrorDefNumEntidadesLayout);
        jDialogAvisoErrorDefNumEntidadesLayout.setHorizontalGroup(
            jDialogAvisoErrorDefNumEntidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogAvisoErrorDefNumEntidadesLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jDialogAvisoErrorDefNumEntidadesLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialogAvisoErrorDefNumEntidadesLayout.setVerticalGroup(
            jDialogAvisoErrorDefNumEntidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogAvisoErrorDefNumEntidadesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Escenario de simulación");
        setMinimumSize(new java.awt.Dimension(30, 30));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jTextFieldModeloOrganizacion.setName("Modelo Organizacion"); // NOI18N

        robotIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosEscenarios/Robot.png"))); // NOI18N
        robotIcon.setText("Robots");
        robotIcon.setIconTextGap(2);

        intervalNumRobots.setText("0");
        intervalNumRobots.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intervalNumRobotsActionPerformed(evt);
            }
        });

        victimaIcon1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        victimaIcon1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosEscenarios/Mujer.png"))); // NOI18N
        victimaIcon1.setText("Victimas");
        victimaIcon1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        victimaIcon1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        victimaIcon1.setIconTextGap(2);

        intervalNumVictimas.setText("0");
        intervalNumVictimas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intervalNumVictimasActionPerformed(evt);
            }
        });

        jTextFieldIdentEquipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdentEquipoActionPerformed(evt);
            }
        });

        jLabelOrganizacion.setText("Organización");

        jLabelIdentEquipo.setText("Escenario");
        setJMenuBar(GestionEscenarios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelIdentEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIdentEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelOrganizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldModeloOrganizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(robotIcon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(intervalNumRobots, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(victimaIcon1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(intervalNumVictimas, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 433, Short.MAX_VALUE))
                    .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(intervalNumVictimas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(victimaIcon1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(intervalNumRobots, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(robotIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldModeloOrganizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelOrganizacion)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldIdentEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelIdentEquipo))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(564, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here
//        if (evt.getButton()==3){
//            jPopupMenuAddEntidades.show(this,evt.getX(),evt.getY());
//            ultimoPuntoClic = new Point(evt.getX(),evt.getY());
//        }else {
//        String tipoEntidad="Robot";
//         if(intencionUsuarioCrearVictima)tipoEntidad="Victima";
//         Point puntoCursor = MouseInfo.getPointerInfo().getLocation();
//         this.crearIconoRobVict(tipoEntidad,puntoCursor.x,puntoCursor.y );
//        }
    }//GEN-LAST:event_formMouseClicked

    private void intervalNumRobotsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intervalNumRobotsActionPerformed
        // TODO add your handling code here:
        int num1 = Integer.parseInt(intervalNumRobots.getText());
        System.out.println("Numero de robots");
                if (num1>20 ){
//                    JOptionPane.showInputDialog(rootPane,"El numero de robots tiene que ser menor que 20");
           JOptionPane.showMessageDialog(rootPane,"El numero de robots tiene que ser menor que 20","Error en Numero Entidades", JOptionPane.ERROR_MESSAGE);
               
                }else System.out.println("Definido el numero de robots : "+ num1);

    }//GEN-LAST:event_intervalNumRobotsActionPerformed

    private void intervalNumVictimasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intervalNumVictimasActionPerformed
        // TODO add your handling code here:
        int num1 = Integer.parseInt(intervalNumVictimas.getText());
        System.out.println("Numero de victimas");
                if (num1>20 ){
                    JOptionPane.showMessageDialog(rootPane,"El numero de victimas tiene que ser menor que 20","Error en Numero Entidades", JOptionPane.ERROR_MESSAGE);
                    
                }else System.out.println("Definido el numero de victimas : "+ num1);
    }//GEN-LAST:event_intervalNumVictimasActionPerformed

    private void jTextFieldIdentEquipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdentEquipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdentEquipoActionPerformed
    
    public void visualizarIdentsEquipoRobot ( ArrayList<String> equipoIds){
//        eqipoIds = eqipoIds.toArray();
        identsRobotsEquipo = equipoIds;
//        this.listaComponentes.setListData(identsRobotsEquipo.toArray());
//        listaComponentes.setVisible(true);
}
    
 public  void addEntidadEnEscenario (String rutaIcono, String idEntidad, Point puntoLoc){
        JLabel labelEntidad = tablaEntidadesEnEscenario.get(idEntidad);
        if(labelEntidad==null){
        labelEntidad = new JLabel();
        labelEntidad.setBounds(10, 10, 300, 300);
//        Icon icon  = new ImageIcon(rutaIcono);
//        JLabel label;
//        label = new JLabel(idEntidad,icon , SwingConstants.CENTER);
        labelEntidad.setHorizontalTextPosition(SwingConstants.RIGHT);
        labelEntidad.setText(idEntidad);
        this.add(labelEntidad);
        
        labelEntidad.setIcon(new ImageIcon(rutaIcono));
        labelEntidad.setLocation(puntoLoc);
        this.listaEntidadesEnEscenario.add(labelEntidad);
        this.tablaEntidadesEnEscenario.put(idEntidad, labelEntidad);
        System.out.println( "Se crea la entidad : "+labelEntidad.getText()+ " Punto : =" + puntoLoc );
        }else{
            System.out.println( "la  entidad : "+idEntidad+ " Ya existe No se incluye en el escenario" );
            labelEntidad.setLocation(puntoLoc);
        }
        labelEntidad.setVisible(true);
    }
    public void actualizarInfoEquipoEnEscenario (){
//        jTextFieldIdentEquipo= escenrioSimComp.get
        jTextFieldModeloOrganizacion.setText(""+escenarioActual.getmodeloOrganizativo());
        jTextFieldIdentEquipo.setText(""+escenarioActual.getIdentEscenario());
        intervalNumRobots.setText(""+escenarioActual.getNumRobots());
        intervalNumVictimas.setText(""+escenarioActual.getNumVictimas());
//        intervalNumVictimas.setVisible(true);
    }
//    private void setEscenarioActualComp(EscenarioSimulacionRobtsVictms escenActualComp){
//        escenarioActual = escenActualComp;
//    }
//     private void setPersistencia(PersistenciaVisualizadorEscenarios persistEscenario) {
////        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    persistencia = persistEscenario;
//     }
//     public void visualizarEscenario(EscenarioSimulacionRobtsVictms infoEscenario ){
    public void visualizarEscenario( ){
        if (!escenarioActualAbierto){
         int numRobots = escenarioActual.getNumRobots();
         int numVictims = escenarioActual.getNumVictimas();
         jTextFieldIdentEquipo.setText(""+escenarioActual.getIdentEscenario());
         jTextFieldModeloOrganizacion.setText(""+escenarioActual.getmodeloOrganizativo());
         intervalNumRobots.setText(""+numRobots);
         intervalNumVictimas.setText(""+numVictims);
         
         String rutaImagen;
         Set entidades;
         Iterator entries;
         if (numRobots>0) {
          rutaImagen=VocabularioRosace.RUTA_ICONOS_ESCENARIOS+imageniconoRobot;
          entidades = escenarioActual.getRobots();
//          entidades.remove("robotInit");
          entries = entidades.iterator();
          Entry thisEntry;
          RobotStatus1 robotInfo;
        while (entries.hasNext()) {
             thisEntry = (Entry) entries.next();
             robotInfo = (RobotStatus1)thisEntry.getValue();
//            addEntidadEnEscenario(rutaImagen,(String)thisEntry.getKey(),(Point)thisEntry.getValue());
            addEntidadEnEscenario(rutaImagen,(String)thisEntry.getKey(),robotInfo.getLocPoint());
//         intervalNumRobots.setText(""+infoEscenario.getNumRobots());
//         intervalNumVictimas.setText(""+escenrioSimComp.getNumVictimas());
        }
         }
         if (numVictims>0) {
             rutaImagen=VocabularioRosace.RUTA_ICONOS_ESCENARIOS+imageniconoMujer;
            entidades = escenarioActual.getSetVictims();
//            entidades.remove("victimInit");
            entries = entidades.iterator();
            Entry thisEntry ;
            Victim victimInfo ;
            while (entries.hasNext()) {
                 thisEntry = (Entry) entries.next();
                 victimInfo = (Victim)thisEntry.getValue();
                addEntidadEnEscenario(rutaImagen,(String)thisEntry.getKey(),victimInfo.getLocPoint());
//         intervalNumRobots.setText(""+infoEscenario.getNumRobots());
//         intervalNumVictimas.setText(""+escenrioSimComp.getNumVictimas());
            }
         }
         this.setLocation(100,100);
         this.setVisible(true);
         escenarioActualAbierto = true;
        }
     }

  public synchronized void cambiarPosicionRobot(String idRobot, int nueva_coordx, int nueva_coordy) {

//        String numeroRobot = getNumeroRobot(idRobot);
//       System.out.println("Peticiones de cambio de posicion  Robot : "+ idRobot+ " CoordX: " +nueva_coordx + " CoordY: " +nueva_coordy );
        //JLabel jlabelRobot = new JLabel();
        if (tablaEntidadesEnEscenario!=null){
        JLabel jlabelRobot = tablaEntidadesEnEscenario.get(idRobot);

        if (jlabelRobot != null) {
//            JOptionPane.showMessageDialog(panelVisor, "Se llama idRobot:"+valor_idRobot+" X:"+nueva_coordx+ "Y:"+nueva_coordy);
//            jlabelRobot.setBounds(jlabelRobot.getX()+10, jlabelRobot.getY()+10, jlabelRobot.getWidth(), jlabelRobot.getHeight());
//            jlabelRobot.setBounds(nueva_coordx, nueva_coordy, jlabelRobot.getWidth(), jlabelRobot.getHeight());
            jlabelRobot.setLocation(nueva_coordx, nueva_coordy);

        } else 
            System.out.println("jlabel nulo");
        }else {
             System.out.println("Tabla de robots y victimas null ");
                }


//        System.out.println("Localizacion del robot " + jlabelRobot.getText() + "-> " + jlabelRobot.getBounds());
//        System.out.println("Localizacion del robot " + jlabelRobot.getText() + "-> " + jlabelRobot.getLocationOnScreen());
    }

    public void cambiarIconoEntidad(String idEntidad, ImageIcon imagenIcono) {

       JLabel jlabelEntidad = tablaEntidadesEnEscenario.get(idEntidad);
        if (jlabelEntidad != null) {
//            ImageIcon icono = new ImageIcon (imagenIcono);
            jlabelEntidad.setIcon(imagenIcono);
        } else {
            System.out.println("jlabelEntidad nulo");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VisorMovimientoEscenario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VisorMovimientoEscenario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VisorMovimientoEscenario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VisorMovimientoEscenario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
            String  directorioPersistencia = VocabularioRosace.NombreDirectorioPersistenciaEscenarios+File.separator;
            VisorMovimientoEscenario visor;
//            PersistenciaVisualizadorEscenarios persistencia= new PersistenciaVisualizadorEscenarios();
//            GestionEscenariosSimulacion gestionEscComp= new GestionEscenariosSimulacion();
//            gestionEscComp.setIdentsEscenariosSimulacion(persistencia.obtenerIdentsEscenarioSimulacion(directorioPersistencia));
//                try {
//                    gestionEscComp = new GestionEscenariosSimulacion();
//                    gestionEscComp.setIdentsEscenariosSimulacion(persistencia.obtenerIdentsEscenarioSimulacion(directorioPersistencia));
////        escenarioActualComp = gestionEscComp.crearEscenarioSimulación();
////                    visor = new VisorCreacionEscenarios1(new ControladorVisualizacionSimulRosace(notifEvts));
////             
//////                    persistencia= new PersistenciaVisualizadorEscenarios();
////                    visor.setPersistencia(persistencia);
////                    visor.setGestorEscenarionComp(gestionEscComp);
////                    visor.setEscenarioActualComp(gestionEscComp.crearEscenarioSimulación());
////                    visor.actualizarInfoEquipoEnEscenario();
////                    visor.setVisible(true);
//                } catch (Exception ex) {
//                    Exceptions.printStackTrace(ex);
//                }
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar GestionEscenarios;
    private javax.swing.JTextField intervalNumRobots;
    private javax.swing.JTextField intervalNumVictimas;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialogAvisoErrorDefNumEntidades;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelIdentEquipo;
    private javax.swing.JLabel jLabelOrganizacion;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTextField jTextFieldIdentEquipo;
    private javax.swing.JTextField jTextFieldModeloOrganizacion;
    private javax.swing.JLabel robotIcon;
    private javax.swing.JLabel victimaIcon1;
    // End of variables declaration//GEN-END:variables


public void visualizarConsejo (String titulo, String msgConsejo, String recomendacion){
         JOptionPane.showMessageDialog(rootPane,msgConsejo + "  "+ recomendacion, titulo,2);
     }
 public synchronized   void actualizarEscenario(EscenarioSimulacionRobtsVictms escenarioComp) {
        
            //Si el escenario a visulizar
         int numRobots = escenarioComp.getNumRobots();
         int numVictims = escenarioComp.getNumVictimas();
         jTextFieldIdentEquipo.setText(""+escenarioComp.getIdentEscenario());
         jTextFieldModeloOrganizacion.setText(""+escenarioComp.getmodeloOrganizativo());
         intervalNumRobots.setText(""+numRobots);
         intervalNumVictimas.setText(""+numVictims);
         this.cambiarPosicionRobotsEscenario(escenarioComp.getRobots());
         this.inicializarEstatusVictimas(escenarioComp.getVictims().entrySet());
         this.setLocation(100,100);
         this.setVisible(true);
         escenarioActualAbierto = true;
         escenarioActual = escenarioComp;
        
     }
    public void inicializarEstatusVictimas (Set victimas){
       Iterator  iteratorVictimas = victimas.iterator();
//            entidades.remove("victimInit");
            Entry thisEntry ;
            Victim victimInfo ;
            while (iteratorVictimas.hasNext()) {
                 thisEntry = (Entry) iteratorVictimas.next();
                 victimInfo = (Victim)thisEntry.getValue();
                cambiarIconoEntidad(victimInfo.getName(), IMAGEmujer);
                 this.setVisible(true);
//         intervalNumRobots.setText(""+infoEscenario.getNumRobots());
//         intervalNumVictimas.setText(""+escenrioSimComp.getNumVictimas());
            }
    }
    public void cambiarPosicionRobotsEscenario(Set robotStatus){
      Iterator  iteratorRobot = robotStatus.iterator();
          Entry entryRobot;
          RobotStatus1 robotInfo;
          Point locRobot;
        while (iteratorRobot.hasNext()) {
             entryRobot = (Entry) iteratorRobot.next();
             robotInfo = (RobotStatus1)entryRobot.getValue();
             locRobot = robotInfo.getLocPoint();
             cambiarIconoEntidad(robotInfo.getIdRobot(), IMAGErobot);
            this.cambiarPosicionRobot(robotInfo.getIdRobot(),locRobot.x, locRobot.y);
            this.setVisible(true);
        }
    }
}
